/**
 * Entitas Generated Match Extensions for shmupwarz
 *
 * do not edit this file
 */
[indent=4]
uses Bosco
uses Bosco.ECS
namespace Bosco.ECS 
    class Matching : DarkMatter 



        /** @type {entitas.Matcher} */
        prop static Bounds : IMatcher 
            get
                if _matchBounds == null
                    var matchBounds = Matcher.AllOf({Component.Bounds})
                return _matchBounds


        /** @type {entitas.Matcher} */
        prop static Bullet : IMatcher 
            get
                if _matchBullet == null
                    var matchBullet = Matcher.AllOf({Component.Bullet})
                return _matchBullet


        /** @type {entitas.Matcher} */
        prop static ColorAnimation : IMatcher 
            get
                if _matchColorAnimation == null
                    var matchColorAnimation = Matcher.AllOf({Component.ColorAnimation})
                return _matchColorAnimation


        /** @type {entitas.Matcher} */
        prop static Destroy : IMatcher 
            get
                if _matchDestroy == null
                    var matchDestroy = Matcher.AllOf({Component.Destroy})
                return _matchDestroy


        /** @type {entitas.Matcher} */
        prop static Enemy : IMatcher 
            get
                if _matchEnemy == null
                    var matchEnemy = Matcher.AllOf({Component.Enemy})
                return _matchEnemy


        /** @type {entitas.Matcher} */
        prop static Expires : IMatcher 
            get
                if _matchExpires == null
                    var matchExpires = Matcher.AllOf({Component.Expires})
                return _matchExpires


        /** @type {entitas.Matcher} */
        prop static Firing : IMatcher 
            get
                if _matchFiring == null
                    var matchFiring = Matcher.AllOf({Component.Firing})
                return _matchFiring


        /** @type {entitas.Matcher} */
        prop static Health : IMatcher 
            get
                if _matchHealth == null
                    var matchHealth = Matcher.AllOf({Component.Health})
                return _matchHealth


        /** @type {entitas.Matcher} */
        prop static Layer : IMatcher 
            get
                if _matchLayer == null
                    var matchLayer = Matcher.AllOf({Component.Layer})
                return _matchLayer


        /** @type {entitas.Matcher} */
        prop static Life : IMatcher 
            get
                if _matchLife == null
                    var matchLife = Matcher.AllOf({Component.Life})
                return _matchLife


        /** @type {entitas.Matcher} */
        prop static Mine : IMatcher 
            get
                if _matchMine == null
                    var matchMine = Matcher.AllOf({Component.Mine})
                return _matchMine


        /** @type {entitas.Matcher} */
        prop static Mouse : IMatcher 
            get
                if _matchMouse == null
                    var matchMouse = Matcher.AllOf({Component.Mouse})
                return _matchMouse


        /** @type {entitas.Matcher} */
        prop static Player : IMatcher 
            get
                if _matchPlayer == null
                    var matchPlayer = Matcher.AllOf({Component.Player})
                return _matchPlayer


        /** @type {entitas.Matcher} */
        prop static Position : IMatcher 
            get
                if _matchPosition == null
                    var matchPosition = Matcher.AllOf({Component.Position})
                return _matchPosition


        /** @type {entitas.Matcher} */
        prop static Resource : IMatcher 
            get
                if _matchResource == null
                    var matchResource = Matcher.AllOf({Component.Resource})
                return _matchResource


        /** @type {entitas.Matcher} */
        prop static ScaleAnimation : IMatcher 
            get
                if _matchScaleAnimation == null
                    var matchScaleAnimation = Matcher.AllOf({Component.ScaleAnimation})
                return _matchScaleAnimation


        /** @type {entitas.Matcher} */
        prop static Scale : IMatcher 
            get
                if _matchScale == null
                    var matchScale = Matcher.AllOf({Component.Scale})
                return _matchScale


        /** @type {entitas.Matcher} */
        prop static Score : IMatcher 
            get
                if _matchScore == null
                    var matchScore = Matcher.AllOf({Component.Score})
                return _matchScore


        /** @type {entitas.Matcher} */
        prop static SoundEffect : IMatcher 
            get
                if _matchSoundEffect == null
                    var matchSoundEffect = Matcher.AllOf({Component.SoundEffect})
                return _matchSoundEffect


        /** @type {entitas.Matcher} */
        prop static Velocity : IMatcher 
            get
                if _matchVelocity == null
                    var matchVelocity = Matcher.AllOf({Component.Velocity})
                return _matchVelocity

        /** @type {entitas.Matching} */
        _matchBounds : static IMatcher
        /** @type {entitas.Matching} */
        _matchBullet : static IMatcher
        /** @type {entitas.Matching} */
        _matchColorAnimation : static IMatcher
        /** @type {entitas.Matching} */
        _matchDestroy : static IMatcher
        /** @type {entitas.Matching} */
        _matchEnemy : static IMatcher
        /** @type {entitas.Matching} */
        _matchExpires : static IMatcher
        /** @type {entitas.Matching} */
        _matchFiring : static IMatcher
        /** @type {entitas.Matching} */
        _matchHealth : static IMatcher
        /** @type {entitas.Matching} */
        _matchLayer : static IMatcher
        /** @type {entitas.Matching} */
        _matchLife : static IMatcher
        /** @type {entitas.Matching} */
        _matchMine : static IMatcher
        /** @type {entitas.Matching} */
        _matchMouse : static IMatcher
        /** @type {entitas.Matching} */
        _matchPlayer : static IMatcher
        /** @type {entitas.Matching} */
        _matchPosition : static IMatcher
        /** @type {entitas.Matching} */
        _matchResource : static IMatcher
        /** @type {entitas.Matching} */
        _matchScaleAnimation : static IMatcher
        /** @type {entitas.Matching} */
        _matchScale : static IMatcher
        /** @type {entitas.Matching} */
        _matchScore : static IMatcher
        /** @type {entitas.Matching} */
        _matchSoundEffect : static IMatcher
        /** @type {entitas.Matching} */
        _matchVelocity : static IMatcher

